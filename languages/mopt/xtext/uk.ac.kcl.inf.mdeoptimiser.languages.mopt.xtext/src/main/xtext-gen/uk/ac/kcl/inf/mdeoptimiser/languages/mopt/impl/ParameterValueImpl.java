/**
 * generated by Xtext 2.17.0
 */
package uk.ac.kcl.inf.mdeoptimiser.languages.mopt.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.xtext.xbase.XExpression;

import uk.ac.kcl.inf.mdeoptimiser.languages.mopt.MoptPackage;
import uk.ac.kcl.inf.mdeoptimiser.languages.mopt.ParameterValue;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Parameter Value</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.mdeoptimiser.languages.mopt.impl.ParameterValueImpl#getNumeric <em>Numeric</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.mdeoptimiser.languages.mopt.impl.ParameterValueImpl#getFunctional <em>Functional</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.mdeoptimiser.languages.mopt.impl.ParameterValueImpl#getParametric <em>Parametric</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.mdeoptimiser.languages.mopt.impl.ParameterValueImpl#getParams <em>Params</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParameterValueImpl extends MinimalEObjectImpl.Container implements ParameterValue
{
  /**
   * The default value of the '{@link #getNumeric() <em>Numeric</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumeric()
   * @generated
   * @ordered
   */
  protected static final String NUMERIC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNumeric() <em>Numeric</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumeric()
   * @generated
   * @ordered
   */
  protected String numeric = NUMERIC_EDEFAULT;

  /**
   * The default value of the '{@link #getFunctional() <em>Functional</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctional()
   * @generated
   * @ordered
   */
  protected static final String FUNCTIONAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFunctional() <em>Functional</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctional()
   * @generated
   * @ordered
   */
  protected String functional = FUNCTIONAL_EDEFAULT;

  /**
   * The default value of the '{@link #getParametric() <em>Parametric</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParametric()
   * @generated
   * @ordered
   */
  protected static final String PARAMETRIC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getParametric() <em>Parametric</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParametric()
   * @generated
   * @ordered
   */
  protected String parametric = PARAMETRIC_EDEFAULT;

  /**
   * The cached value of the '{@link #getParams() <em>Params</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParams()
   * @generated
   * @ordered
   */
  protected EList<XExpression> params;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParameterValueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MoptPackage.Literals.PARAMETER_VALUE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNumeric()
  {
    return numeric;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNumeric(String newNumeric)
  {
    String oldNumeric = numeric;
    numeric = newNumeric;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoptPackage.PARAMETER_VALUE__NUMERIC, oldNumeric, numeric));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFunctional()
  {
    return functional;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunctional(String newFunctional)
  {
    String oldFunctional = functional;
    functional = newFunctional;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoptPackage.PARAMETER_VALUE__FUNCTIONAL, oldFunctional, functional));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getParametric()
  {
    return parametric;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParametric(String newParametric)
  {
    String oldParametric = parametric;
    parametric = newParametric;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoptPackage.PARAMETER_VALUE__PARAMETRIC, oldParametric, parametric));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<XExpression> getParams()
  {
    if (params == null)
    {
      params = new EObjectContainmentEList<XExpression>(XExpression.class, this, MoptPackage.PARAMETER_VALUE__PARAMS);
    }
    return params;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MoptPackage.PARAMETER_VALUE__PARAMS:
        return ((InternalEList<?>)getParams()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MoptPackage.PARAMETER_VALUE__NUMERIC:
        return getNumeric();
      case MoptPackage.PARAMETER_VALUE__FUNCTIONAL:
        return getFunctional();
      case MoptPackage.PARAMETER_VALUE__PARAMETRIC:
        return getParametric();
      case MoptPackage.PARAMETER_VALUE__PARAMS:
        return getParams();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MoptPackage.PARAMETER_VALUE__NUMERIC:
        setNumeric((String)newValue);
        return;
      case MoptPackage.PARAMETER_VALUE__FUNCTIONAL:
        setFunctional((String)newValue);
        return;
      case MoptPackage.PARAMETER_VALUE__PARAMETRIC:
        setParametric((String)newValue);
        return;
      case MoptPackage.PARAMETER_VALUE__PARAMS:
        getParams().clear();
        getParams().addAll((Collection<? extends XExpression>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MoptPackage.PARAMETER_VALUE__NUMERIC:
        setNumeric(NUMERIC_EDEFAULT);
        return;
      case MoptPackage.PARAMETER_VALUE__FUNCTIONAL:
        setFunctional(FUNCTIONAL_EDEFAULT);
        return;
      case MoptPackage.PARAMETER_VALUE__PARAMETRIC:
        setParametric(PARAMETRIC_EDEFAULT);
        return;
      case MoptPackage.PARAMETER_VALUE__PARAMS:
        getParams().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MoptPackage.PARAMETER_VALUE__NUMERIC:
        return NUMERIC_EDEFAULT == null ? numeric != null : !NUMERIC_EDEFAULT.equals(numeric);
      case MoptPackage.PARAMETER_VALUE__FUNCTIONAL:
        return FUNCTIONAL_EDEFAULT == null ? functional != null : !FUNCTIONAL_EDEFAULT.equals(functional);
      case MoptPackage.PARAMETER_VALUE__PARAMETRIC:
        return PARAMETRIC_EDEFAULT == null ? parametric != null : !PARAMETRIC_EDEFAULT.equals(parametric);
      case MoptPackage.PARAMETER_VALUE__PARAMS:
        return params != null && !params.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (numeric: ");
    result.append(numeric);
    result.append(", functional: ");
    result.append(functional);
    result.append(", parametric: ");
    result.append(parametric);
    result.append(')');
    return result.toString();
  }

} //ParameterValueImpl
