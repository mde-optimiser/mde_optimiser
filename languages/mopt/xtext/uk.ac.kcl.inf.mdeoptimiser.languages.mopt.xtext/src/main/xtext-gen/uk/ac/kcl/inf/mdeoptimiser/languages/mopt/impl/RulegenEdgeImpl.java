/**
 * generated by Xtext 2.17.0
 */
package uk.ac.kcl.inf.mdeoptimiser.languages.mopt.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uk.ac.kcl.inf.mdeoptimiser.languages.mopt.MoptPackage;
import uk.ac.kcl.inf.mdeoptimiser.languages.mopt.RulegenEdge;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rulegen Edge</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.mdeoptimiser.languages.mopt.impl.RulegenEdgeImpl#getNode <em>Node</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.mdeoptimiser.languages.mopt.impl.RulegenEdgeImpl#getEdge <em>Edge</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.mdeoptimiser.languages.mopt.impl.RulegenEdgeImpl#getGenerationRestriction <em>Generation Restriction</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RulegenEdgeImpl extends MinimalEObjectImpl.Container implements RulegenEdge
{
  /**
   * The default value of the '{@link #getNode() <em>Node</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNode()
   * @generated
   * @ordered
   */
  protected static final String NODE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNode() <em>Node</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNode()
   * @generated
   * @ordered
   */
  protected String node = NODE_EDEFAULT;

  /**
   * The default value of the '{@link #getEdge() <em>Edge</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEdge()
   * @generated
   * @ordered
   */
  protected static final String EDGE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEdge() <em>Edge</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEdge()
   * @generated
   * @ordered
   */
  protected String edge = EDGE_EDEFAULT;

  /**
   * The default value of the '{@link #getGenerationRestriction() <em>Generation Restriction</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGenerationRestriction()
   * @generated
   * @ordered
   */
  protected static final String GENERATION_RESTRICTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGenerationRestriction() <em>Generation Restriction</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGenerationRestriction()
   * @generated
   * @ordered
   */
  protected String generationRestriction = GENERATION_RESTRICTION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RulegenEdgeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MoptPackage.Literals.RULEGEN_EDGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNode()
  {
    return node;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNode(String newNode)
  {
    String oldNode = node;
    node = newNode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoptPackage.RULEGEN_EDGE__NODE, oldNode, node));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEdge()
  {
    return edge;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEdge(String newEdge)
  {
    String oldEdge = edge;
    edge = newEdge;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoptPackage.RULEGEN_EDGE__EDGE, oldEdge, edge));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getGenerationRestriction()
  {
    return generationRestriction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGenerationRestriction(String newGenerationRestriction)
  {
    String oldGenerationRestriction = generationRestriction;
    generationRestriction = newGenerationRestriction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MoptPackage.RULEGEN_EDGE__GENERATION_RESTRICTION, oldGenerationRestriction, generationRestriction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MoptPackage.RULEGEN_EDGE__NODE:
        return getNode();
      case MoptPackage.RULEGEN_EDGE__EDGE:
        return getEdge();
      case MoptPackage.RULEGEN_EDGE__GENERATION_RESTRICTION:
        return getGenerationRestriction();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MoptPackage.RULEGEN_EDGE__NODE:
        setNode((String)newValue);
        return;
      case MoptPackage.RULEGEN_EDGE__EDGE:
        setEdge((String)newValue);
        return;
      case MoptPackage.RULEGEN_EDGE__GENERATION_RESTRICTION:
        setGenerationRestriction((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MoptPackage.RULEGEN_EDGE__NODE:
        setNode(NODE_EDEFAULT);
        return;
      case MoptPackage.RULEGEN_EDGE__EDGE:
        setEdge(EDGE_EDEFAULT);
        return;
      case MoptPackage.RULEGEN_EDGE__GENERATION_RESTRICTION:
        setGenerationRestriction(GENERATION_RESTRICTION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MoptPackage.RULEGEN_EDGE__NODE:
        return NODE_EDEFAULT == null ? node != null : !NODE_EDEFAULT.equals(node);
      case MoptPackage.RULEGEN_EDGE__EDGE:
        return EDGE_EDEFAULT == null ? edge != null : !EDGE_EDEFAULT.equals(edge);
      case MoptPackage.RULEGEN_EDGE__GENERATION_RESTRICTION:
        return GENERATION_RESTRICTION_EDEFAULT == null ? generationRestriction != null : !GENERATION_RESTRICTION_EDEFAULT.equals(generationRestriction);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (node: ");
    result.append(node);
    result.append(", edge: ");
    result.append(edge);
    result.append(", generationRestriction: ");
    result.append(generationRestriction);
    result.append(')');
    return result.toString();
  }

} //RulegenEdgeImpl
