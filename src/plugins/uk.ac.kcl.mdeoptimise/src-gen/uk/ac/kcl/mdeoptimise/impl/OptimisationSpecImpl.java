/**
 * generated by Xtext 2.10.0
 */
package uk.ac.kcl.mdeoptimise.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uk.ac.kcl.mdeoptimise.MdeoptimisePackage;
import uk.ac.kcl.mdeoptimise.OptimisationSpec;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Optimisation Spec</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.mdeoptimise.impl.OptimisationSpecImpl#getAlgorithmFactory <em>Algorithm Factory</em>}</li>
 *   <li>{@link uk.ac.kcl.mdeoptimise.impl.OptimisationSpecImpl#getAlgorithmName <em>Algorithm Name</em>}</li>
 *   <li>{@link uk.ac.kcl.mdeoptimise.impl.OptimisationSpecImpl#getAlgorithmVariation <em>Algorithm Variation</em>}</li>
 *   <li>{@link uk.ac.kcl.mdeoptimise.impl.OptimisationSpecImpl#getAlgorithmEvolutions <em>Algorithm Evolutions</em>}</li>
 *   <li>{@link uk.ac.kcl.mdeoptimise.impl.OptimisationSpecImpl#getAlgorithmPopulation <em>Algorithm Population</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OptimisationSpecImpl extends MinimalEObjectImpl.Container implements OptimisationSpec
{
  /**
   * The default value of the '{@link #getAlgorithmFactory() <em>Algorithm Factory</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlgorithmFactory()
   * @generated
   * @ordered
   */
  protected static final String ALGORITHM_FACTORY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAlgorithmFactory() <em>Algorithm Factory</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlgorithmFactory()
   * @generated
   * @ordered
   */
  protected String algorithmFactory = ALGORITHM_FACTORY_EDEFAULT;

  /**
   * The default value of the '{@link #getAlgorithmName() <em>Algorithm Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlgorithmName()
   * @generated
   * @ordered
   */
  protected static final String ALGORITHM_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAlgorithmName() <em>Algorithm Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlgorithmName()
   * @generated
   * @ordered
   */
  protected String algorithmName = ALGORITHM_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getAlgorithmVariation() <em>Algorithm Variation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlgorithmVariation()
   * @generated
   * @ordered
   */
  protected static final String ALGORITHM_VARIATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAlgorithmVariation() <em>Algorithm Variation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlgorithmVariation()
   * @generated
   * @ordered
   */
  protected String algorithmVariation = ALGORITHM_VARIATION_EDEFAULT;

  /**
   * The default value of the '{@link #getAlgorithmEvolutions() <em>Algorithm Evolutions</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlgorithmEvolutions()
   * @generated
   * @ordered
   */
  protected static final int ALGORITHM_EVOLUTIONS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getAlgorithmEvolutions() <em>Algorithm Evolutions</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlgorithmEvolutions()
   * @generated
   * @ordered
   */
  protected int algorithmEvolutions = ALGORITHM_EVOLUTIONS_EDEFAULT;

  /**
   * The default value of the '{@link #getAlgorithmPopulation() <em>Algorithm Population</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlgorithmPopulation()
   * @generated
   * @ordered
   */
  protected static final int ALGORITHM_POPULATION_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getAlgorithmPopulation() <em>Algorithm Population</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlgorithmPopulation()
   * @generated
   * @ordered
   */
  protected int algorithmPopulation = ALGORITHM_POPULATION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OptimisationSpecImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MdeoptimisePackage.Literals.OPTIMISATION_SPEC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAlgorithmFactory()
  {
    return algorithmFactory;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAlgorithmFactory(String newAlgorithmFactory)
  {
    String oldAlgorithmFactory = algorithmFactory;
    algorithmFactory = newAlgorithmFactory;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_FACTORY, oldAlgorithmFactory, algorithmFactory));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAlgorithmName()
  {
    return algorithmName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAlgorithmName(String newAlgorithmName)
  {
    String oldAlgorithmName = algorithmName;
    algorithmName = newAlgorithmName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_NAME, oldAlgorithmName, algorithmName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAlgorithmVariation()
  {
    return algorithmVariation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAlgorithmVariation(String newAlgorithmVariation)
  {
    String oldAlgorithmVariation = algorithmVariation;
    algorithmVariation = newAlgorithmVariation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_VARIATION, oldAlgorithmVariation, algorithmVariation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getAlgorithmEvolutions()
  {
    return algorithmEvolutions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAlgorithmEvolutions(int newAlgorithmEvolutions)
  {
    int oldAlgorithmEvolutions = algorithmEvolutions;
    algorithmEvolutions = newAlgorithmEvolutions;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_EVOLUTIONS, oldAlgorithmEvolutions, algorithmEvolutions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getAlgorithmPopulation()
  {
    return algorithmPopulation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAlgorithmPopulation(int newAlgorithmPopulation)
  {
    int oldAlgorithmPopulation = algorithmPopulation;
    algorithmPopulation = newAlgorithmPopulation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_POPULATION, oldAlgorithmPopulation, algorithmPopulation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_FACTORY:
        return getAlgorithmFactory();
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_NAME:
        return getAlgorithmName();
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_VARIATION:
        return getAlgorithmVariation();
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_EVOLUTIONS:
        return getAlgorithmEvolutions();
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_POPULATION:
        return getAlgorithmPopulation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_FACTORY:
        setAlgorithmFactory((String)newValue);
        return;
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_NAME:
        setAlgorithmName((String)newValue);
        return;
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_VARIATION:
        setAlgorithmVariation((String)newValue);
        return;
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_EVOLUTIONS:
        setAlgorithmEvolutions((Integer)newValue);
        return;
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_POPULATION:
        setAlgorithmPopulation((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_FACTORY:
        setAlgorithmFactory(ALGORITHM_FACTORY_EDEFAULT);
        return;
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_NAME:
        setAlgorithmName(ALGORITHM_NAME_EDEFAULT);
        return;
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_VARIATION:
        setAlgorithmVariation(ALGORITHM_VARIATION_EDEFAULT);
        return;
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_EVOLUTIONS:
        setAlgorithmEvolutions(ALGORITHM_EVOLUTIONS_EDEFAULT);
        return;
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_POPULATION:
        setAlgorithmPopulation(ALGORITHM_POPULATION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_FACTORY:
        return ALGORITHM_FACTORY_EDEFAULT == null ? algorithmFactory != null : !ALGORITHM_FACTORY_EDEFAULT.equals(algorithmFactory);
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_NAME:
        return ALGORITHM_NAME_EDEFAULT == null ? algorithmName != null : !ALGORITHM_NAME_EDEFAULT.equals(algorithmName);
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_VARIATION:
        return ALGORITHM_VARIATION_EDEFAULT == null ? algorithmVariation != null : !ALGORITHM_VARIATION_EDEFAULT.equals(algorithmVariation);
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_EVOLUTIONS:
        return algorithmEvolutions != ALGORITHM_EVOLUTIONS_EDEFAULT;
      case MdeoptimisePackage.OPTIMISATION_SPEC__ALGORITHM_POPULATION:
        return algorithmPopulation != ALGORITHM_POPULATION_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (algorithmFactory: ");
    result.append(algorithmFactory);
    result.append(", algorithmName: ");
    result.append(algorithmName);
    result.append(", algorithmVariation: ");
    result.append(algorithmVariation);
    result.append(", algorithmEvolutions: ");
    result.append(algorithmEvolutions);
    result.append(", algorithmPopulation: ");
    result.append(algorithmPopulation);
    result.append(')');
    return result.toString();
  }

} //OptimisationSpecImpl
