/**
 * generated by Xtext 2.10.0
 */
package uk.ac.kcl.mdeoptimise.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uk.ac.kcl.mdeoptimise.AlgorithmVariation;
import uk.ac.kcl.mdeoptimise.MdeoptimisePackage;
import uk.ac.kcl.mdeoptimise.ProbabilityVariation;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Algorithm Variation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.mdeoptimise.impl.AlgorithmVariationImpl#getProbabilityVariation <em>Probability Variation</em>}</li>
 *   <li>{@link uk.ac.kcl.mdeoptimise.impl.AlgorithmVariationImpl#getSimpleVariation <em>Simple Variation</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AlgorithmVariationImpl extends MinimalEObjectImpl.Container implements AlgorithmVariation
{
  /**
   * The cached value of the '{@link #getProbabilityVariation() <em>Probability Variation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProbabilityVariation()
   * @generated
   * @ordered
   */
  protected ProbabilityVariation probabilityVariation;

  /**
   * The default value of the '{@link #getSimpleVariation() <em>Simple Variation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimpleVariation()
   * @generated
   * @ordered
   */
  protected static final String SIMPLE_VARIATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSimpleVariation() <em>Simple Variation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimpleVariation()
   * @generated
   * @ordered
   */
  protected String simpleVariation = SIMPLE_VARIATION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AlgorithmVariationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MdeoptimisePackage.Literals.ALGORITHM_VARIATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProbabilityVariation getProbabilityVariation()
  {
    return probabilityVariation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProbabilityVariation(ProbabilityVariation newProbabilityVariation, NotificationChain msgs)
  {
    ProbabilityVariation oldProbabilityVariation = probabilityVariation;
    probabilityVariation = newProbabilityVariation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MdeoptimisePackage.ALGORITHM_VARIATION__PROBABILITY_VARIATION, oldProbabilityVariation, newProbabilityVariation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setProbabilityVariation(ProbabilityVariation newProbabilityVariation)
  {
    if (newProbabilityVariation != probabilityVariation)
    {
      NotificationChain msgs = null;
      if (probabilityVariation != null)
        msgs = ((InternalEObject)probabilityVariation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MdeoptimisePackage.ALGORITHM_VARIATION__PROBABILITY_VARIATION, null, msgs);
      if (newProbabilityVariation != null)
        msgs = ((InternalEObject)newProbabilityVariation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MdeoptimisePackage.ALGORITHM_VARIATION__PROBABILITY_VARIATION, null, msgs);
      msgs = basicSetProbabilityVariation(newProbabilityVariation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MdeoptimisePackage.ALGORITHM_VARIATION__PROBABILITY_VARIATION, newProbabilityVariation, newProbabilityVariation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSimpleVariation()
  {
    return simpleVariation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSimpleVariation(String newSimpleVariation)
  {
    String oldSimpleVariation = simpleVariation;
    simpleVariation = newSimpleVariation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MdeoptimisePackage.ALGORITHM_VARIATION__SIMPLE_VARIATION, oldSimpleVariation, simpleVariation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MdeoptimisePackage.ALGORITHM_VARIATION__PROBABILITY_VARIATION:
        return basicSetProbabilityVariation(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MdeoptimisePackage.ALGORITHM_VARIATION__PROBABILITY_VARIATION:
        return getProbabilityVariation();
      case MdeoptimisePackage.ALGORITHM_VARIATION__SIMPLE_VARIATION:
        return getSimpleVariation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MdeoptimisePackage.ALGORITHM_VARIATION__PROBABILITY_VARIATION:
        setProbabilityVariation((ProbabilityVariation)newValue);
        return;
      case MdeoptimisePackage.ALGORITHM_VARIATION__SIMPLE_VARIATION:
        setSimpleVariation((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MdeoptimisePackage.ALGORITHM_VARIATION__PROBABILITY_VARIATION:
        setProbabilityVariation((ProbabilityVariation)null);
        return;
      case MdeoptimisePackage.ALGORITHM_VARIATION__SIMPLE_VARIATION:
        setSimpleVariation(SIMPLE_VARIATION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MdeoptimisePackage.ALGORITHM_VARIATION__PROBABILITY_VARIATION:
        return probabilityVariation != null;
      case MdeoptimisePackage.ALGORITHM_VARIATION__SIMPLE_VARIATION:
        return SIMPLE_VARIATION_EDEFAULT == null ? simpleVariation != null : !SIMPLE_VARIATION_EDEFAULT.equals(simpleVariation);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (simpleVariation: ");
    result.append(simpleVariation);
    result.append(')');
    return result.toString();
  }

} //AlgorithmVariationImpl
