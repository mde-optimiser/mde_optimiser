/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.Assignment;
import org.xtext.example.mydsl.myDsl.ComponentMapping;
import org.xtext.example.mydsl.myDsl.Implementation;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Request;
import org.xtext.example.mydsl.myDsl.ResourceMapping;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Assignment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AssignmentImpl#getRequest <em>Request</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AssignmentImpl#getImplementation <em>Implementation</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AssignmentImpl#getResourceMappings <em>Resource Mappings</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AssignmentImpl#getComponentMappings <em>Component Mappings</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AssignmentImpl extends MinimalEObjectImpl.Container implements Assignment
{
  /**
   * The cached value of the '{@link #getRequest() <em>Request</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequest()
   * @generated
   * @ordered
   */
  protected Request request;

  /**
   * The cached value of the '{@link #getImplementation() <em>Implementation</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImplementation()
   * @generated
   * @ordered
   */
  protected Implementation implementation;

  /**
   * The cached value of the '{@link #getResourceMappings() <em>Resource Mappings</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResourceMappings()
   * @generated
   * @ordered
   */
  protected EList<ResourceMapping> resourceMappings;

  /**
   * The cached value of the '{@link #getComponentMappings() <em>Component Mappings</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponentMappings()
   * @generated
   * @ordered
   */
  protected EList<ComponentMapping> componentMappings;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AssignmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.ASSIGNMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Request getRequest()
  {
    if (request != null && request.eIsProxy())
    {
      InternalEObject oldRequest = (InternalEObject)request;
      request = (Request)eResolveProxy(oldRequest);
      if (request != oldRequest)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.ASSIGNMENT__REQUEST, oldRequest, request));
      }
    }
    return request;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Request basicGetRequest()
  {
    return request;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRequest(Request newRequest)
  {
    Request oldRequest = request;
    request = newRequest;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ASSIGNMENT__REQUEST, oldRequest, request));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Implementation getImplementation()
  {
    if (implementation != null && implementation.eIsProxy())
    {
      InternalEObject oldImplementation = (InternalEObject)implementation;
      implementation = (Implementation)eResolveProxy(oldImplementation);
      if (implementation != oldImplementation)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.ASSIGNMENT__IMPLEMENTATION, oldImplementation, implementation));
      }
    }
    return implementation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Implementation basicGetImplementation()
  {
    return implementation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImplementation(Implementation newImplementation)
  {
    Implementation oldImplementation = implementation;
    implementation = newImplementation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ASSIGNMENT__IMPLEMENTATION, oldImplementation, implementation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ResourceMapping> getResourceMappings()
  {
    if (resourceMappings == null)
    {
      resourceMappings = new EObjectContainmentEList<ResourceMapping>(ResourceMapping.class, this, MyDslPackage.ASSIGNMENT__RESOURCE_MAPPINGS);
    }
    return resourceMappings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ComponentMapping> getComponentMappings()
  {
    if (componentMappings == null)
    {
      componentMappings = new EObjectContainmentEList<ComponentMapping>(ComponentMapping.class, this, MyDslPackage.ASSIGNMENT__COMPONENT_MAPPINGS);
    }
    return componentMappings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.ASSIGNMENT__RESOURCE_MAPPINGS:
        return ((InternalEList<?>)getResourceMappings()).basicRemove(otherEnd, msgs);
      case MyDslPackage.ASSIGNMENT__COMPONENT_MAPPINGS:
        return ((InternalEList<?>)getComponentMappings()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.ASSIGNMENT__REQUEST:
        if (resolve) return getRequest();
        return basicGetRequest();
      case MyDslPackage.ASSIGNMENT__IMPLEMENTATION:
        if (resolve) return getImplementation();
        return basicGetImplementation();
      case MyDslPackage.ASSIGNMENT__RESOURCE_MAPPINGS:
        return getResourceMappings();
      case MyDslPackage.ASSIGNMENT__COMPONENT_MAPPINGS:
        return getComponentMappings();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.ASSIGNMENT__REQUEST:
        setRequest((Request)newValue);
        return;
      case MyDslPackage.ASSIGNMENT__IMPLEMENTATION:
        setImplementation((Implementation)newValue);
        return;
      case MyDslPackage.ASSIGNMENT__RESOURCE_MAPPINGS:
        getResourceMappings().clear();
        getResourceMappings().addAll((Collection<? extends ResourceMapping>)newValue);
        return;
      case MyDslPackage.ASSIGNMENT__COMPONENT_MAPPINGS:
        getComponentMappings().clear();
        getComponentMappings().addAll((Collection<? extends ComponentMapping>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ASSIGNMENT__REQUEST:
        setRequest((Request)null);
        return;
      case MyDslPackage.ASSIGNMENT__IMPLEMENTATION:
        setImplementation((Implementation)null);
        return;
      case MyDslPackage.ASSIGNMENT__RESOURCE_MAPPINGS:
        getResourceMappings().clear();
        return;
      case MyDslPackage.ASSIGNMENT__COMPONENT_MAPPINGS:
        getComponentMappings().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ASSIGNMENT__REQUEST:
        return request != null;
      case MyDslPackage.ASSIGNMENT__IMPLEMENTATION:
        return implementation != null;
      case MyDslPackage.ASSIGNMENT__RESOURCE_MAPPINGS:
        return resourceMappings != null && !resourceMappings.isEmpty();
      case MyDslPackage.ASSIGNMENT__COMPONENT_MAPPINGS:
        return componentMappings != null && !componentMappings.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //AssignmentImpl
