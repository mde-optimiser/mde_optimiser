/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.Instance;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.ResourceRequirement;
import org.xtext.example.mydsl.myDsl.ResourceType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Resource Requirement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ResourceRequirementImpl#getInstance <em>Instance</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ResourceRequirementImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ResourceRequirementImpl#getResourceRequirements <em>Resource Requirements</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ResourceRequirementImpl extends MinimalEObjectImpl.Container implements ResourceRequirement
{
  /**
   * The cached value of the '{@link #getInstance() <em>Instance</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInstance()
   * @generated
   * @ordered
   */
  protected Instance instance;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected ResourceType type;

  /**
   * The cached value of the '{@link #getResourceRequirements() <em>Resource Requirements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResourceRequirements()
   * @generated
   * @ordered
   */
  protected EList<ResourceRequirement> resourceRequirements;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ResourceRequirementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.RESOURCE_REQUIREMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Instance getInstance()
  {
    return instance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInstance(Instance newInstance, NotificationChain msgs)
  {
    Instance oldInstance = instance;
    instance = newInstance;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.RESOURCE_REQUIREMENT__INSTANCE, oldInstance, newInstance);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInstance(Instance newInstance)
  {
    if (newInstance != instance)
    {
      NotificationChain msgs = null;
      if (instance != null)
        msgs = ((InternalEObject)instance).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.RESOURCE_REQUIREMENT__INSTANCE, null, msgs);
      if (newInstance != null)
        msgs = ((InternalEObject)newInstance).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.RESOURCE_REQUIREMENT__INSTANCE, null, msgs);
      msgs = basicSetInstance(newInstance, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RESOURCE_REQUIREMENT__INSTANCE, newInstance, newInstance));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ResourceType getType()
  {
    if (type != null && type.eIsProxy())
    {
      InternalEObject oldType = (InternalEObject)type;
      type = (ResourceType)eResolveProxy(oldType);
      if (type != oldType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.RESOURCE_REQUIREMENT__TYPE, oldType, type));
      }
    }
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ResourceType basicGetType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(ResourceType newType)
  {
    ResourceType oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RESOURCE_REQUIREMENT__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ResourceRequirement> getResourceRequirements()
  {
    if (resourceRequirements == null)
    {
      resourceRequirements = new EObjectContainmentEList<ResourceRequirement>(ResourceRequirement.class, this, MyDslPackage.RESOURCE_REQUIREMENT__RESOURCE_REQUIREMENTS);
    }
    return resourceRequirements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.RESOURCE_REQUIREMENT__INSTANCE:
        return basicSetInstance(null, msgs);
      case MyDslPackage.RESOURCE_REQUIREMENT__RESOURCE_REQUIREMENTS:
        return ((InternalEList<?>)getResourceRequirements()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.RESOURCE_REQUIREMENT__INSTANCE:
        return getInstance();
      case MyDslPackage.RESOURCE_REQUIREMENT__TYPE:
        if (resolve) return getType();
        return basicGetType();
      case MyDslPackage.RESOURCE_REQUIREMENT__RESOURCE_REQUIREMENTS:
        return getResourceRequirements();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.RESOURCE_REQUIREMENT__INSTANCE:
        setInstance((Instance)newValue);
        return;
      case MyDslPackage.RESOURCE_REQUIREMENT__TYPE:
        setType((ResourceType)newValue);
        return;
      case MyDslPackage.RESOURCE_REQUIREMENT__RESOURCE_REQUIREMENTS:
        getResourceRequirements().clear();
        getResourceRequirements().addAll((Collection<? extends ResourceRequirement>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.RESOURCE_REQUIREMENT__INSTANCE:
        setInstance((Instance)null);
        return;
      case MyDslPackage.RESOURCE_REQUIREMENT__TYPE:
        setType((ResourceType)null);
        return;
      case MyDslPackage.RESOURCE_REQUIREMENT__RESOURCE_REQUIREMENTS:
        getResourceRequirements().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.RESOURCE_REQUIREMENT__INSTANCE:
        return instance != null;
      case MyDslPackage.RESOURCE_REQUIREMENT__TYPE:
        return type != null;
      case MyDslPackage.RESOURCE_REQUIREMENT__RESOURCE_REQUIREMENTS:
        return resourceRequirements != null && !resourceRequirements.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ResourceRequirementImpl
