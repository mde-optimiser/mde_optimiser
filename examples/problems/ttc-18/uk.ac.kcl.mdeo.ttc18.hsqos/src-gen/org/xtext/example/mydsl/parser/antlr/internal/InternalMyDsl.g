/*
 * generated by Xtext 2.12.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getHardwareModelHardwareModelParserRuleCall_0_0());
				}
				lv_hardwareModel_0_0=ruleHardwareModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"hardwareModel",
						lv_hardwareModel_0_0,
						"org.xtext.example.mydsl.MyDsl.HardwareModel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getSoftwareModelSoftwareModelParserRuleCall_1_0());
				}
				lv_softwareModel_1_0=ruleSoftwareModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"softwareModel",
						lv_softwareModel_1_0,
						"org.xtext.example.mydsl.MyDsl.SoftwareModel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getRequestsRequestParserRuleCall_2_0());
				}
				lv_requests_2_0=ruleRequest
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"requests",
						lv_requests_2_0,
						"org.xtext.example.mydsl.MyDsl.Request");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getObjectiveObjectiveParserRuleCall_3_0());
				}
				lv_objective_3_0=ruleObjective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"objective",
						lv_objective_3_0,
						"org.xtext.example.mydsl.MyDsl.Objective");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getSolutionSolutionParserRuleCall_4_0());
				}
				lv_solution_4_0=ruleSolution
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"solution",
						lv_solution_4_0,
						"org.xtext.example.mydsl.MyDsl.Solution");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleHardwareModel
entryRuleHardwareModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHardwareModelRule()); }
	iv_ruleHardwareModel=ruleHardwareModel
	{ $current=$iv_ruleHardwareModel.current; }
	EOF;

// Rule HardwareModel
ruleHardwareModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getHardwareModelAccess().getPropertiesPropertyParserRuleCall_0_0());
				}
				lv_properties_0_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHardwareModelRule());
					}
					add(
						$current,
						"properties",
						lv_properties_0_0,
						"org.xtext.example.mydsl.MyDsl.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getHardwareModelAccess().getResourceTypesResourceTypeParserRuleCall_1_0());
				}
				lv_resourceTypes_1_0=ruleResourceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHardwareModelRule());
					}
					add(
						$current,
						"resourceTypes",
						lv_resourceTypes_1_0,
						"org.xtext.example.mydsl.MyDsl.ResourceType");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getHardwareModelAccess().getResourcesResourceParserRuleCall_2_0());
				}
				lv_resources_2_0=ruleResource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHardwareModelRule());
					}
					add(
						$current,
						"resources",
						lv_resources_2_0,
						"org.xtext.example.mydsl.MyDsl.Resource");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleResourceType
entryRuleResourceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourceTypeRule()); }
	iv_ruleResourceType=ruleResourceType
	{ $current=$iv_ruleResourceType.current; }
	EOF;

// Rule ResourceType
ruleResourceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_container_0_0='container'
				{
					newLeafNode(lv_container_0_0, grammarAccess.getResourceTypeAccess().getContainerContainerKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourceTypeRule());
					}
					setWithLastConsumed($current, "container", true, "container");
				}
			)
		)?
		otherlv_1='resource'
		{
			newLeafNode(otherlv_1, grammarAccess.getResourceTypeAccess().getResourceKeyword_1());
		}
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getResourceTypeAccess().getTypeKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getResourceTypeAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourceTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getResourceTypeAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResourceTypeAccess().getResourceTypesResourceTypeParserRuleCall_5_0());
				}
				lv_resourceTypes_5_0=ruleResourceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResourceTypeRule());
					}
					add(
						$current,
						"resourceTypes",
						lv_resourceTypes_5_0,
						"org.xtext.example.mydsl.MyDsl.ResourceType");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getResourceTypeAccess().getPropertiesPropertyParserRuleCall_6_0());
				}
				lv_properties_6_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResourceTypeRule());
					}
					add(
						$current,
						"properties",
						lv_properties_6_0,
						"org.xtext.example.mydsl.MyDsl.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_7='using'
			{
				newLeafNode(otherlv_7, grammarAccess.getResourceTypeAccess().getUsingKeyword_7_0());
			}
			otherlv_8='property'
			{
				newLeafNode(otherlv_8, grammarAccess.getResourceTypeAccess().getPropertyKeyword_7_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getResourceTypeRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getResourceTypeAccess().getPropertyReferencesPropertyCrossReference_7_2_0());
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getResourceTypeAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleResource
entryRuleResource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourceRule()); }
	iv_ruleResource=ruleResource
	{ $current=$iv_ruleResource.current; }
	EOF;

// Rule Resource
ruleResource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='resource'
		{
			newLeafNode(otherlv_0, grammarAccess.getResourceAccess().getResourceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getResourceAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourceRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getResourceAccess().getTypeResourceTypeCrossReference_3_0());
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getResourceAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResourceAccess().getResourcesResourceParserRuleCall_5_0());
				}
				lv_resources_5_0=ruleResource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResourceRule());
					}
					add(
						$current,
						"resources",
						lv_resources_5_0,
						"org.xtext.example.mydsl.MyDsl.Resource");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getResourceAccess().getValuesCurrentResourceValueParserRuleCall_6_0());
				}
				lv_values_6_0=ruleCurrentResourceValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResourceRule());
					}
					add(
						$current,
						"values",
						lv_values_6_0,
						"org.xtext.example.mydsl.MyDsl.CurrentResourceValue");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getResourceAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleCurrentResourceValue
entryRuleCurrentResourceValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCurrentResourceValueRule()); }
	iv_ruleCurrentResourceValue=ruleCurrentResourceValue
	{ $current=$iv_ruleCurrentResourceValue.current; }
	EOF;

// Rule CurrentResourceValue
ruleCurrentResourceValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCurrentResourceValueRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getCurrentResourceValueAccess().getPropertyPropertyCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getCurrentResourceValueAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCurrentResourceValueAccess().getValueLiteralExpressionParserRuleCall_2_0());
				}
				lv_value_2_0=ruleLiteralExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCurrentResourceValueRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.MyDsl.LiteralExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSoftwareModel
entryRuleSoftwareModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSoftwareModelRule()); }
	iv_ruleSoftwareModel=ruleSoftwareModel
	{ $current=$iv_ruleSoftwareModel.current; }
	EOF;

// Rule SoftwareModel
ruleSoftwareModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSoftwareModelAccess().getPropertiesPropertyParserRuleCall_0_0_0());
					}
					lv_properties_0_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSoftwareModelRule());
						}
						add(
							$current,
							"properties",
							lv_properties_0_0,
							"org.xtext.example.mydsl.MyDsl.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSoftwareModelAccess().getParametersMetaParameterParserRuleCall_0_1_0());
					}
					lv_parameters_1_0=ruleMetaParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSoftwareModelRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_1_0,
							"org.xtext.example.mydsl.MyDsl.MetaParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSoftwareModelAccess().getComponentsComponentParserRuleCall_1_0());
				}
				lv_components_2_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSoftwareModelRule());
					}
					add(
						$current,
						"components",
						lv_components_2_0,
						"org.xtext.example.mydsl.MyDsl.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleMetaParameter
entryRuleMetaParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetaParameterRule()); }
	iv_ruleMetaParameter=ruleMetaParameter
	{ $current=$iv_ruleMetaParameter.current; }
	EOF;

// Rule MetaParameter
ruleMetaParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='meta'
		{
			newLeafNode(otherlv_0, grammarAccess.getMetaParameterAccess().getMetaKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMetaParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetaParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='property'
		{
			newLeafNode(otherlv_0, grammarAccess.getPropertyAccess().getPropertyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_unit_2_0=RULE_UNIT
				{
					newLeafNode(lv_unit_2_0, grammarAccess.getPropertyAccess().getUnitUNITTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"unit",
						lv_unit_2_0,
						"org.xtext.example.mydsl.MyDsl.UNIT");
				}
			)
		)
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentAccess().getComponentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='using'
			{
				newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getUsingKeyword_3_0());
			}
			otherlv_4='property'
			{
				newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getPropertyKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComponentRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getComponentAccess().getUsedPropertiesPropertyCrossReference_3_2_0());
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getImplementationsImplementationParserRuleCall_4_0());
				}
				lv_implementations_6_0=ruleImplementation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					add(
						$current,
						"implementations",
						lv_implementations_6_0,
						"org.xtext.example.mydsl.MyDsl.Implementation");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			otherlv_7='using'
			{
				newLeafNode(otherlv_7, grammarAccess.getComponentAccess().getUsingKeyword_5_0());
			}
			otherlv_8='property'
			{
				newLeafNode(otherlv_8, grammarAccess.getComponentAccess().getPropertyKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComponentRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getComponentAccess().getUsedPropertiesPropertyCrossReference_5_2_0());
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleImplementation
entryRuleImplementation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplementationRule()); }
	iv_ruleImplementation=ruleImplementation
	{ $current=$iv_ruleImplementation.current; }
	EOF;

// Rule Implementation
ruleImplementation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='contract'
		{
			newLeafNode(otherlv_0, grammarAccess.getImplementationAccess().getContractKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getImplementationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImplementationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getImplementationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImplementationAccess().getComponentRequirementsComponentRequirementParserRuleCall_3_0());
				}
				lv_componentRequirements_3_0=ruleComponentRequirement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplementationRule());
					}
					add(
						$current,
						"componentRequirements",
						lv_componentRequirements_3_0,
						"org.xtext.example.mydsl.MyDsl.ComponentRequirement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getImplementationAccess().getResourceRequirementsResourceRequirementParserRuleCall_4_0());
				}
				lv_resourceRequirements_4_0=ruleResourceRequirement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplementationRule());
					}
					add(
						$current,
						"resourceRequirements",
						lv_resourceRequirements_4_0,
						"org.xtext.example.mydsl.MyDsl.ResourceRequirement");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getImplementationAccess().getClausesClauseParserRuleCall_5_0());
				}
				lv_clauses_5_0=ruleClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplementationRule());
					}
					add(
						$current,
						"clauses",
						lv_clauses_5_0,
						"org.xtext.example.mydsl.MyDsl.Clause");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getImplementationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleInstance
entryRuleInstance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceRule()); }
	iv_ruleInstance=ruleInstance
	{ $current=$iv_ruleInstance.current; }
	EOF;

// Rule Instance
ruleInstance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getInstanceRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleComponentRequirement
entryRuleComponentRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRequirementRule()); }
	iv_ruleComponentRequirement=ruleComponentRequirement
	{ $current=$iv_ruleComponentRequirement.current; }
	EOF;

// Rule ComponentRequirement
ruleComponentRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='requires component'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentRequirementAccess().getRequiresComponentKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentRequirementAccess().getInstanceInstanceParserRuleCall_1_0());
				}
				lv_instance_1_0=ruleInstance
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRequirementRule());
					}
					set(
						$current,
						"instance",
						lv_instance_1_0,
						"org.xtext.example.mydsl.MyDsl.Instance");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='of'
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentRequirementAccess().getOfKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentRequirementAccess().getTypeKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRequirementRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getComponentRequirementAccess().getTypeComponentCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleResourceRequirement
entryRuleResourceRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourceRequirementRule()); }
	iv_ruleResourceRequirement=ruleResourceRequirement
	{ $current=$iv_ruleResourceRequirement.current; }
	EOF;

// Rule ResourceRequirement
ruleResourceRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='requires resource'
			{
				newLeafNode(otherlv_0, grammarAccess.getResourceRequirementAccess().getRequiresResourceKeyword_0());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getResourceRequirementAccess().getInstanceInstanceParserRuleCall_1_0());
				}
				lv_instance_1_0=ruleInstance
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResourceRequirementRule());
					}
					set(
						$current,
						"instance",
						lv_instance_1_0,
						"org.xtext.example.mydsl.MyDsl.Instance");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='of'
		{
			newLeafNode(otherlv_2, grammarAccess.getResourceRequirementAccess().getOfKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getResourceRequirementAccess().getTypeKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourceRequirementRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getResourceRequirementAccess().getTypeResourceTypeCrossReference_4_0());
				}
			)
		)
		(
			otherlv_5='with'
			{
				newLeafNode(otherlv_5, grammarAccess.getResourceRequirementAccess().getWithKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getResourceRequirementAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getResourceRequirementAccess().getResourceRequirementsResourceRequirementParserRuleCall_5_2_0());
					}
					lv_resourceRequirements_7_0=ruleResourceRequirement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getResourceRequirementRule());
						}
						add(
							$current,
							"resourceRequirements",
							lv_resourceRequirements_7_0,
							"org.xtext.example.mydsl.MyDsl.ResourceRequirement");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getResourceRequirementAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleClause
entryRuleClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClauseRule()); }
	iv_ruleClause=ruleClause
	{ $current=$iv_ruleClause.current; }
	EOF;

// Rule Clause
ruleClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClauseAccess().getTypeClauseTypeEnumRuleCall_0_0());
				}
				lv_type_0_0=ruleClauseType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClauseRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.mydsl.MyDsl.ClauseType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClauseAccess().getLHSPropertyDesignatorWithOptionalInstanceParserRuleCall_1_0());
				}
				lv_LHS_1_0=rulePropertyDesignatorWithOptionalInstance
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClauseRule());
					}
					set(
						$current,
						"LHS",
						lv_LHS_1_0,
						"org.xtext.example.mydsl.MyDsl.PropertyDesignatorWithOptionalInstance");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClauseAccess().getCompClauseComparatorEnumRuleCall_2_0());
				}
				lv_comp_2_0=ruleClauseComparator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClauseRule());
					}
					set(
						$current,
						"comp",
						lv_comp_2_0,
						"org.xtext.example.mydsl.MyDsl.ClauseComparator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClauseAccess().getRHSExpressionParserRuleCall_3_0());
				}
				lv_RHS_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClauseRule());
					}
					set(
						$current,
						"RHS",
						lv_RHS_3_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRequest
entryRuleRequest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequestRule()); }
	iv_ruleRequest=ruleRequest
	{ $current=$iv_ruleRequest.current; }
	EOF;

// Rule Request
ruleRequest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='request'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequestAccess().getRequestKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRequestAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequestRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='for'
		{
			newLeafNode(otherlv_2, grammarAccess.getRequestAccess().getForKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequestRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getRequestAccess().getComponentComponentCrossReference_3_0());
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getRequestAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRequestAccess().getParameterAssignmentsMetaParameterAssignmentParserRuleCall_5_0());
				}
				lv_parameterAssignments_5_0=ruleMetaParameterAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequestRule());
					}
					add(
						$current,
						"parameterAssignments",
						lv_parameterAssignments_5_0,
						"org.xtext.example.mydsl.MyDsl.MetaParameterAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRequestAccess().getRequirementsClauseParserRuleCall_6_0());
				}
				lv_requirements_6_0=ruleClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequestRule());
					}
					add(
						$current,
						"requirements",
						lv_requirements_6_0,
						"org.xtext.example.mydsl.MyDsl.Clause");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getRequestAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleObjective
entryRuleObjective returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectiveRule()); }
	iv_ruleObjective=ruleObjective
	{ $current=$iv_ruleObjective.current; }
	EOF;

// Rule Objective
ruleObjective returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='minimize'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectiveAccess().getMinimizeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectiveAccess().getAggPropertyAggregationEnumRuleCall_1_0());
				}
				lv_agg_1_0=rulePropertyAggregation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectiveRule());
					}
					set(
						$current,
						"agg",
						lv_agg_1_0,
						"org.xtext.example.mydsl.MyDsl.PropertyAggregation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getObjectiveAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectiveRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getObjectiveAccess().getPropertyPropertyCrossReference_3_0());
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getObjectiveAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getAdditionParserRuleCall());
	}
	this_Addition_0=ruleAddition
	{
		$current = $this_Addition_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAddition
entryRuleAddition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditionRule()); }
	iv_ruleAddition=ruleAddition
	{ $current=$iv_ruleAddition.current; }
	EOF;

// Rule Addition
ruleAddition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
		}
		this_Multiplication_0=ruleMultiplication
		{
			$current = $this_Multiplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAdditionAccess().getAddExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAdditionAccess().getSubExpressionLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getRightAdditionParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleAddition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"org.xtext.example.mydsl.MyDsl.Addition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMultiplication
entryRuleMultiplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicationRule()); }
	iv_ruleMultiplication=ruleMultiplication
	{ $current=$iv_ruleMultiplication.current; }
	EOF;

// Rule Multiplication
ruleMultiplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
		}
		this_Power_0=rulePower
		{
			$current = $this_Power_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultiplicationAccess().getMultExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='*'
					{
						newLeafNode(otherlv_2, grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultiplicationAccess().getDivExpressionLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='/'
					{
						newLeafNode(otherlv_4, grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightMultiplicationParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleMultiplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"org.xtext.example.mydsl.MyDsl.Multiplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePower
entryRulePower returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPowerRule()); }
	iv_rulePower=rulePower
	{ $current=$iv_rulePower.current; }
	EOF;

// Rule Power
rulePower returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPowerAccess().getPrimaryExpressionParserRuleCall_0());
		}
		this_PrimaryExpression_0=rulePrimaryExpression
		{
			$current = $this_PrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPowerAccess().getPowExpressionLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='^'
			{
				newLeafNode(otherlv_2, grammarAccess.getPowerAccess().getCircumflexAccentKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPowerAccess().getRightPrimaryExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPowerRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.MyDsl.PrimaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_rulePrimaryExpression=rulePrimaryExpression
	{ $current=$iv_rulePrimaryExpression.current; }
	EOF;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current = $this_Expression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getDesignatorParserRuleCall_1());
		}
		this_Designator_3=ruleDesignator
		{
			$current = $this_Designator_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralExpressionParserRuleCall_2());
		}
		this_LiteralExpression_4=ruleLiteralExpression
		{
			$current = $this_LiteralExpression_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDesignator
entryRuleDesignator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDesignatorRule()); }
	iv_ruleDesignator=ruleDesignator
	{ $current=$iv_ruleDesignator.current; }
	EOF;

// Rule Designator
ruleDesignator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDesignatorAccess().getPropertyDesignatorParserRuleCall_0());
		}
		this_PropertyDesignator_0=rulePropertyDesignator
		{
			$current = $this_PropertyDesignator_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDesignatorAccess().getMetaParameterDesignatorParserRuleCall_1());
		}
		this_MetaParameterDesignator_1=ruleMetaParameterDesignator
		{
			$current = $this_MetaParameterDesignator_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePropertyDesignator
entryRulePropertyDesignator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyDesignatorRule()); }
	iv_rulePropertyDesignator=rulePropertyDesignator
	{ $current=$iv_rulePropertyDesignator.current; }
	EOF;

// Rule PropertyDesignator
rulePropertyDesignator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyDesignatorRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getPropertyDesignatorAccess().getInstanceInstanceCrossReference_0_0());
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getPropertyDesignatorAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyDesignatorRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getPropertyDesignatorAccess().getPropertyPropertyCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRulePropertyDesignatorWithOptionalInstance
entryRulePropertyDesignatorWithOptionalInstance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyDesignatorWithOptionalInstanceRule()); }
	iv_rulePropertyDesignatorWithOptionalInstance=rulePropertyDesignatorWithOptionalInstance
	{ $current=$iv_rulePropertyDesignatorWithOptionalInstance.current; }
	EOF;

// Rule PropertyDesignatorWithOptionalInstance
rulePropertyDesignatorWithOptionalInstance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyDesignatorWithOptionalInstanceRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getPropertyDesignatorWithOptionalInstanceAccess().getInstanceInstanceCrossReference_0_0_0());
					}
				)
			)
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getPropertyDesignatorWithOptionalInstanceAccess().getFullStopKeyword_0_1());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyDesignatorWithOptionalInstanceRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getPropertyDesignatorWithOptionalInstanceAccess().getPropertyPropertyCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleMetaParameterDesignator
entryRuleMetaParameterDesignator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetaParameterDesignatorRule()); }
	iv_ruleMetaParameterDesignator=ruleMetaParameterDesignator
	{ $current=$iv_ruleMetaParameterDesignator.current; }
	EOF;

// Rule MetaParameterDesignator
ruleMetaParameterDesignator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getMetaParameterDesignatorRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getMetaParameterDesignatorAccess().getMetaParameterMetaParameterCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralExpressionRule()); }
	iv_ruleLiteralExpression=ruleLiteralExpression
	{ $current=$iv_ruleLiteralExpression.current; }
	EOF;

// Rule LiteralExpression
ruleLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLiteralExpressionAccess().getValueDoubleParserRuleCall_0());
			}
			lv_value_0_0=ruleDouble
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLiteralExpressionRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.example.mydsl.MyDsl.Double");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMetaParameterAssignment
entryRuleMetaParameterAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetaParameterAssignmentRule()); }
	iv_ruleMetaParameterAssignment=ruleMetaParameterAssignment
	{ $current=$iv_ruleMetaParameterAssignment.current; }
	EOF;

// Rule MetaParameterAssignment
ruleMetaParameterAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='meta'
		{
			newLeafNode(otherlv_0, grammarAccess.getMetaParameterAssignmentAccess().getMetaKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetaParameterAssignmentRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getMetaParameterAssignmentAccess().getParameterMetaParameterCrossReference_1_0());
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getMetaParameterAssignmentAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetaParameterAssignmentAccess().getValueLiteralExpressionParserRuleCall_3_0());
				}
				lv_value_3_0=ruleLiteralExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetaParameterAssignmentRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.example.mydsl.MyDsl.LiteralExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSolution
entryRuleSolution returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSolutionRule()); }
	iv_ruleSolution=ruleSolution
	{ $current=$iv_ruleSolution.current; }
	EOF;

// Rule Solution
ruleSolution returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='solution'
		{
			newLeafNode(otherlv_0, grammarAccess.getSolutionAccess().getSolutionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSolutionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSolutionAccess().getAssignmentsAssignmentParserRuleCall_2_0());
				}
				lv_assignments_2_0=ruleAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSolutionRule());
					}
					add(
						$current,
						"assignments",
						lv_assignments_2_0,
						"org.xtext.example.mydsl.MyDsl.Assignment");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getSolutionAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssignmentRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getAssignmentAccess().getRequestRequestCrossReference_0_0_0());
					}
				)
			)
			otherlv_1='->'
			{
				newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getHyphenMinusGreaterThanSignKeyword_0_1());
			}
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignmentRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getAssignmentAccess().getImplementationImplementationCrossReference_1_0());
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getAssignmentAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getResourceMappingsResourceMappingParserRuleCall_3_0());
				}
				lv_resourceMappings_4_0=ruleResourceMapping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					add(
						$current,
						"resourceMappings",
						lv_resourceMappings_4_0,
						"org.xtext.example.mydsl.MyDsl.ResourceMapping");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getComponentMappingsComponentMappingParserRuleCall_4_0());
				}
				lv_componentMappings_5_0=ruleComponentMapping
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					add(
						$current,
						"componentMappings",
						lv_componentMappings_5_0,
						"org.xtext.example.mydsl.MyDsl.ComponentMapping");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAssignmentAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleResourceMapping
entryRuleResourceMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourceMappingRule()); }
	iv_ruleResourceMapping=ruleResourceMapping
	{ $current=$iv_ruleResourceMapping.current; }
	EOF;

// Rule ResourceMapping
ruleResourceMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourceMappingRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getResourceMappingAccess().getRequiredResourceInstanceCrossReference_0_0());
				}
			)
		)
		otherlv_1='->'
		{
			newLeafNode(otherlv_1, grammarAccess.getResourceMappingAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourceMappingRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getResourceMappingAccess().getUsedResourceResourceCrossReference_2_0());
				}
			)
		)
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getResourceMappingAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getResourceMappingAccess().getSubMappingsResourceMappingParserRuleCall_3_1_0());
					}
					lv_subMappings_4_0=ruleResourceMapping
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getResourceMappingRule());
						}
						add(
							$current,
							"subMappings",
							lv_subMappings_4_0,
							"org.xtext.example.mydsl.MyDsl.ResourceMapping");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getResourceMappingAccess().getRightCurlyBracketKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRuleComponentMapping
entryRuleComponentMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentMappingRule()); }
	iv_ruleComponentMapping=ruleComponentMapping
	{ $current=$iv_ruleComponentMapping.current; }
	EOF;

// Rule ComponentMapping
ruleComponentMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentMappingRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getComponentMappingAccess().getComponentInstanceCrossReference_0_0());
				}
			)
		)
		otherlv_1='-->'
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentMappingAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentMappingAccess().getAssignmentAssignmentParserRuleCall_2_0());
				}
				lv_assignment_2_0=ruleAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentMappingRule());
					}
					set(
						$current,
						"assignment",
						lv_assignment_2_0,
						"org.xtext.example.mydsl.MyDsl.Assignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDouble
entryRuleDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDoubleRule()); }
	iv_ruleDouble=ruleDouble
	{ $current=$iv_ruleDouble.current.getText(); }
	EOF;

// Rule Double
ruleDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDoubleAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Rule ClauseType
ruleClauseType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='requiring'
			{
				$current = grammarAccess.getClauseTypeAccess().getRequiringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getClauseTypeAccess().getRequiringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='providing'
			{
				$current = grammarAccess.getClauseTypeAccess().getProvidingEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getClauseTypeAccess().getProvidingEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ClauseComparator
ruleClauseComparator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<'
			{
				$current = grammarAccess.getClauseComparatorAccess().getLTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getClauseComparatorAccess().getLTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<='
			{
				$current = grammarAccess.getClauseComparatorAccess().getLEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getClauseComparatorAccess().getLEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='='
			{
				$current = grammarAccess.getClauseComparatorAccess().getEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getClauseComparatorAccess().getEQEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='!='
			{
				$current = grammarAccess.getClauseComparatorAccess().getNEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getClauseComparatorAccess().getNEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='>='
			{
				$current = grammarAccess.getClauseComparatorAccess().getGEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getClauseComparatorAccess().getGEEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='>'
			{
				$current = grammarAccess.getClauseComparatorAccess().getGTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getClauseComparatorAccess().getGTEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule PropertyAggregation
rulePropertyAggregation returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='sum'
			{
				$current = grammarAccess.getPropertyAggregationAccess().getSumEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPropertyAggregationAccess().getSumEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='max'
			{
				$current = grammarAccess.getPropertyAggregationAccess().getMaxEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPropertyAggregationAccess().getMaxEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_UNIT : '[' ( options {greedy=false;} : . )*']';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
