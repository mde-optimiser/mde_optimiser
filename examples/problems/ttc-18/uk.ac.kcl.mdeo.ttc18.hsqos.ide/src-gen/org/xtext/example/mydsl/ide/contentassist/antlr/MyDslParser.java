/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Inject
	private MyDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getSoftwareModelAccess().getAlternatives_0(), "rule__SoftwareModel__Alternatives_0");
					put(grammarAccess.getBinaryExpressionAccess().getAlternatives(), "rule__BinaryExpression__Alternatives");
					put(grammarAccess.getAdditionAccess().getAlternatives_1_0(), "rule__Addition__Alternatives_1_0");
					put(grammarAccess.getMultiplicationAccess().getAlternatives_1_0(), "rule__Multiplication__Alternatives_1_0");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getDesignatorAccess().getAlternatives(), "rule__Designator__Alternatives");
					put(grammarAccess.getClauseTypeAccess().getAlternatives(), "rule__ClauseType__Alternatives");
					put(grammarAccess.getClauseComparatorAccess().getAlternatives(), "rule__ClauseComparator__Alternatives");
					put(grammarAccess.getPropertyAggregationAccess().getAlternatives(), "rule__PropertyAggregation__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getHardwareModelAccess().getGroup(), "rule__HardwareModel__Group__0");
					put(grammarAccess.getResourceTypeAccess().getGroup(), "rule__ResourceType__Group__0");
					put(grammarAccess.getResourceTypeAccess().getGroup_7(), "rule__ResourceType__Group_7__0");
					put(grammarAccess.getResourceAccess().getGroup(), "rule__Resource__Group__0");
					put(grammarAccess.getCurrentResourceValueAccess().getGroup(), "rule__CurrentResourceValue__Group__0");
					put(grammarAccess.getSoftwareModelAccess().getGroup(), "rule__SoftwareModel__Group__0");
					put(grammarAccess.getMetaParameterAccess().getGroup(), "rule__MetaParameter__Group__0");
					put(grammarAccess.getPropertyAccess().getGroup(), "rule__Property__Group__0");
					put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
					put(grammarAccess.getComponentAccess().getGroup_3(), "rule__Component__Group_3__0");
					put(grammarAccess.getComponentAccess().getGroup_5(), "rule__Component__Group_5__0");
					put(grammarAccess.getImplementationAccess().getGroup(), "rule__Implementation__Group__0");
					put(grammarAccess.getComponentRequirementAccess().getGroup(), "rule__ComponentRequirement__Group__0");
					put(grammarAccess.getResourceRequirementAccess().getGroup(), "rule__ResourceRequirement__Group__0");
					put(grammarAccess.getResourceRequirementAccess().getGroup_5(), "rule__ResourceRequirement__Group_5__0");
					put(grammarAccess.getClauseAccess().getGroup(), "rule__Clause__Group__0");
					put(grammarAccess.getRequestAccess().getGroup(), "rule__Request__Group__0");
					put(grammarAccess.getObjectiveAccess().getGroup(), "rule__Objective__Group__0");
					put(grammarAccess.getAdditionAccess().getGroup(), "rule__Addition__Group__0");
					put(grammarAccess.getAdditionAccess().getGroup_1(), "rule__Addition__Group_1__0");
					put(grammarAccess.getAdditionAccess().getGroup_1_0_0(), "rule__Addition__Group_1_0_0__0");
					put(grammarAccess.getAdditionAccess().getGroup_1_0_1(), "rule__Addition__Group_1_0_1__0");
					put(grammarAccess.getMultiplicationAccess().getGroup(), "rule__Multiplication__Group__0");
					put(grammarAccess.getMultiplicationAccess().getGroup_1(), "rule__Multiplication__Group_1__0");
					put(grammarAccess.getMultiplicationAccess().getGroup_1_0_0(), "rule__Multiplication__Group_1_0_0__0");
					put(grammarAccess.getMultiplicationAccess().getGroup_1_0_1(), "rule__Multiplication__Group_1_0_1__0");
					put(grammarAccess.getPowerAccess().getGroup(), "rule__Power__Group__0");
					put(grammarAccess.getPowerAccess().getGroup_1(), "rule__Power__Group_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_0(), "rule__PrimaryExpression__Group_0__0");
					put(grammarAccess.getPropertyDesignatorAccess().getGroup(), "rule__PropertyDesignator__Group__0");
					put(grammarAccess.getPropertyDesignatorWithOptionalInstanceAccess().getGroup(), "rule__PropertyDesignatorWithOptionalInstance__Group__0");
					put(grammarAccess.getPropertyDesignatorWithOptionalInstanceAccess().getGroup_0(), "rule__PropertyDesignatorWithOptionalInstance__Group_0__0");
					put(grammarAccess.getMetaParameterAssignmentAccess().getGroup(), "rule__MetaParameterAssignment__Group__0");
					put(grammarAccess.getSolutionAccess().getGroup(), "rule__Solution__Group__0");
					put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
					put(grammarAccess.getAssignmentAccess().getGroup_0(), "rule__Assignment__Group_0__0");
					put(grammarAccess.getResourceMappingAccess().getGroup(), "rule__ResourceMapping__Group__0");
					put(grammarAccess.getResourceMappingAccess().getGroup_3(), "rule__ResourceMapping__Group_3__0");
					put(grammarAccess.getComponentMappingAccess().getGroup(), "rule__ComponentMapping__Group__0");
					put(grammarAccess.getDoubleAccess().getGroup(), "rule__Double__Group__0");
					put(grammarAccess.getModelAccess().getHardwareModelAssignment_0(), "rule__Model__HardwareModelAssignment_0");
					put(grammarAccess.getModelAccess().getSoftwareModelAssignment_1(), "rule__Model__SoftwareModelAssignment_1");
					put(grammarAccess.getModelAccess().getRequestsAssignment_2(), "rule__Model__RequestsAssignment_2");
					put(grammarAccess.getModelAccess().getObjectiveAssignment_3(), "rule__Model__ObjectiveAssignment_3");
					put(grammarAccess.getModelAccess().getSolutionAssignment_4(), "rule__Model__SolutionAssignment_4");
					put(grammarAccess.getHardwareModelAccess().getPropertiesAssignment_0(), "rule__HardwareModel__PropertiesAssignment_0");
					put(grammarAccess.getHardwareModelAccess().getResourceTypesAssignment_1(), "rule__HardwareModel__ResourceTypesAssignment_1");
					put(grammarAccess.getHardwareModelAccess().getResourcesAssignment_2(), "rule__HardwareModel__ResourcesAssignment_2");
					put(grammarAccess.getResourceTypeAccess().getContainerAssignment_0(), "rule__ResourceType__ContainerAssignment_0");
					put(grammarAccess.getResourceTypeAccess().getNameAssignment_3(), "rule__ResourceType__NameAssignment_3");
					put(grammarAccess.getResourceTypeAccess().getResourceTypesAssignment_5(), "rule__ResourceType__ResourceTypesAssignment_5");
					put(grammarAccess.getResourceTypeAccess().getPropertiesAssignment_6(), "rule__ResourceType__PropertiesAssignment_6");
					put(grammarAccess.getResourceTypeAccess().getPropertyReferencesAssignment_7_2(), "rule__ResourceType__PropertyReferencesAssignment_7_2");
					put(grammarAccess.getResourceAccess().getNameAssignment_1(), "rule__Resource__NameAssignment_1");
					put(grammarAccess.getResourceAccess().getTypeAssignment_3(), "rule__Resource__TypeAssignment_3");
					put(grammarAccess.getResourceAccess().getResourcesAssignment_5(), "rule__Resource__ResourcesAssignment_5");
					put(grammarAccess.getResourceAccess().getValuesAssignment_6(), "rule__Resource__ValuesAssignment_6");
					put(grammarAccess.getCurrentResourceValueAccess().getPropertyAssignment_0(), "rule__CurrentResourceValue__PropertyAssignment_0");
					put(grammarAccess.getCurrentResourceValueAccess().getValueAssignment_2(), "rule__CurrentResourceValue__ValueAssignment_2");
					put(grammarAccess.getSoftwareModelAccess().getPropertiesAssignment_0_0(), "rule__SoftwareModel__PropertiesAssignment_0_0");
					put(grammarAccess.getSoftwareModelAccess().getParametersAssignment_0_1(), "rule__SoftwareModel__ParametersAssignment_0_1");
					put(grammarAccess.getSoftwareModelAccess().getComponentsAssignment_1(), "rule__SoftwareModel__ComponentsAssignment_1");
					put(grammarAccess.getMetaParameterAccess().getNameAssignment_1(), "rule__MetaParameter__NameAssignment_1");
					put(grammarAccess.getPropertyAccess().getNameAssignment_1(), "rule__Property__NameAssignment_1");
					put(grammarAccess.getPropertyAccess().getUnitAssignment_2(), "rule__Property__UnitAssignment_2");
					put(grammarAccess.getComponentAccess().getNameAssignment_1(), "rule__Component__NameAssignment_1");
					put(grammarAccess.getComponentAccess().getUsedPropertiesAssignment_3_2(), "rule__Component__UsedPropertiesAssignment_3_2");
					put(grammarAccess.getComponentAccess().getImplementationsAssignment_4(), "rule__Component__ImplementationsAssignment_4");
					put(grammarAccess.getComponentAccess().getUsedPropertiesAssignment_5_2(), "rule__Component__UsedPropertiesAssignment_5_2");
					put(grammarAccess.getImplementationAccess().getNameAssignment_1(), "rule__Implementation__NameAssignment_1");
					put(grammarAccess.getImplementationAccess().getComponentRequirementsAssignment_3(), "rule__Implementation__ComponentRequirementsAssignment_3");
					put(grammarAccess.getImplementationAccess().getResourceRequirementsAssignment_4(), "rule__Implementation__ResourceRequirementsAssignment_4");
					put(grammarAccess.getImplementationAccess().getClausesAssignment_5(), "rule__Implementation__ClausesAssignment_5");
					put(grammarAccess.getInstanceAccess().getNameAssignment(), "rule__Instance__NameAssignment");
					put(grammarAccess.getComponentRequirementAccess().getInstanceAssignment_1(), "rule__ComponentRequirement__InstanceAssignment_1");
					put(grammarAccess.getComponentRequirementAccess().getTypeAssignment_4(), "rule__ComponentRequirement__TypeAssignment_4");
					put(grammarAccess.getResourceRequirementAccess().getInstanceAssignment_1(), "rule__ResourceRequirement__InstanceAssignment_1");
					put(grammarAccess.getResourceRequirementAccess().getTypeAssignment_4(), "rule__ResourceRequirement__TypeAssignment_4");
					put(grammarAccess.getResourceRequirementAccess().getResourceRequirementsAssignment_5_2(), "rule__ResourceRequirement__ResourceRequirementsAssignment_5_2");
					put(grammarAccess.getClauseAccess().getTypeAssignment_0(), "rule__Clause__TypeAssignment_0");
					put(grammarAccess.getClauseAccess().getLHSAssignment_1(), "rule__Clause__LHSAssignment_1");
					put(grammarAccess.getClauseAccess().getCompAssignment_2(), "rule__Clause__CompAssignment_2");
					put(grammarAccess.getClauseAccess().getRHSAssignment_3(), "rule__Clause__RHSAssignment_3");
					put(grammarAccess.getRequestAccess().getNameAssignment_1(), "rule__Request__NameAssignment_1");
					put(grammarAccess.getRequestAccess().getComponentAssignment_3(), "rule__Request__ComponentAssignment_3");
					put(grammarAccess.getRequestAccess().getParameterAssignmentsAssignment_5(), "rule__Request__ParameterAssignmentsAssignment_5");
					put(grammarAccess.getRequestAccess().getRequirementsAssignment_6(), "rule__Request__RequirementsAssignment_6");
					put(grammarAccess.getObjectiveAccess().getAggAssignment_1(), "rule__Objective__AggAssignment_1");
					put(grammarAccess.getObjectiveAccess().getPropertyAssignment_3(), "rule__Objective__PropertyAssignment_3");
					put(grammarAccess.getAdditionAccess().getRightAssignment_1_1(), "rule__Addition__RightAssignment_1_1");
					put(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1(), "rule__Multiplication__RightAssignment_1_1");
					put(grammarAccess.getPowerAccess().getRightAssignment_1_2(), "rule__Power__RightAssignment_1_2");
					put(grammarAccess.getPropertyDesignatorAccess().getInstanceAssignment_0(), "rule__PropertyDesignator__InstanceAssignment_0");
					put(grammarAccess.getPropertyDesignatorAccess().getPropertyAssignment_2(), "rule__PropertyDesignator__PropertyAssignment_2");
					put(grammarAccess.getPropertyDesignatorWithOptionalInstanceAccess().getInstanceAssignment_0_0(), "rule__PropertyDesignatorWithOptionalInstance__InstanceAssignment_0_0");
					put(grammarAccess.getPropertyDesignatorWithOptionalInstanceAccess().getPropertyAssignment_1(), "rule__PropertyDesignatorWithOptionalInstance__PropertyAssignment_1");
					put(grammarAccess.getMetaParameterDesignatorAccess().getMetaParameterAssignment(), "rule__MetaParameterDesignator__MetaParameterAssignment");
					put(grammarAccess.getLiteralExpressionAccess().getValueAssignment(), "rule__LiteralExpression__ValueAssignment");
					put(grammarAccess.getMetaParameterAssignmentAccess().getParameterAssignment_1(), "rule__MetaParameterAssignment__ParameterAssignment_1");
					put(grammarAccess.getMetaParameterAssignmentAccess().getValueAssignment_3(), "rule__MetaParameterAssignment__ValueAssignment_3");
					put(grammarAccess.getSolutionAccess().getAssignmentsAssignment_2(), "rule__Solution__AssignmentsAssignment_2");
					put(grammarAccess.getAssignmentAccess().getRequestAssignment_0_0(), "rule__Assignment__RequestAssignment_0_0");
					put(grammarAccess.getAssignmentAccess().getImplementationAssignment_1(), "rule__Assignment__ImplementationAssignment_1");
					put(grammarAccess.getAssignmentAccess().getResourceMappingsAssignment_3(), "rule__Assignment__ResourceMappingsAssignment_3");
					put(grammarAccess.getAssignmentAccess().getComponentMappingsAssignment_4(), "rule__Assignment__ComponentMappingsAssignment_4");
					put(grammarAccess.getResourceMappingAccess().getRequiredResourceAssignment_0(), "rule__ResourceMapping__RequiredResourceAssignment_0");
					put(grammarAccess.getResourceMappingAccess().getUsedResourceAssignment_2(), "rule__ResourceMapping__UsedResourceAssignment_2");
					put(grammarAccess.getResourceMappingAccess().getSubMappingsAssignment_3_1(), "rule__ResourceMapping__SubMappingsAssignment_3_1");
					put(grammarAccess.getComponentMappingAccess().getComponentAssignment_0(), "rule__ComponentMapping__ComponentAssignment_0");
					put(grammarAccess.getComponentMappingAccess().getAssignmentAssignment_2(), "rule__ComponentMapping__AssignmentAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
